services:
  # Redis service for FSM, users, and temp storage
  redis:
    image: redis:8.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - studybuddybot-network

  # Main bot application
  bot:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      # Mount source code for hot reloading
      - .:/app
      # Mount logs directory
      - ./logs_test:/app/logs
      # Mount media directory for user files
      - ./media_test:/app/media
    ports:
      - "8001:8000"  # Different port to avoid conflict with prod
    environment:
      # Python environment
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      
      # Bot configuration environment
      - BOT_CONFIG=bot_test
      
      # System configuration
      - TIME_ZONE=${TIME_ZONE:-Europe/Moscow}
      
      # Development flags
      - DEBUG=true
      - DEVELOPMENT=true
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for Redis to be ready...' &&
        while ! redis-cli -h redis ping > /dev/null 2>&1; do
          sleep 1
        done &&
        echo 'Redis is ready!' &&
        echo 'Starting bot in development mode...' &&
        python bot.py
      "
    restart: "no"
    networks:
      - studybuddybot-network

volumes:
  redis_data:
    driver: local

networks:
  studybuddybot-network:
    driver: bridge
